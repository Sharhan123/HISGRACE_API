"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.rController = exports.pbController = exports.cController = exports.bController = exports.dController = exports.pController = exports.aConntroller = exports.vController = exports.uController = void 0;
const userController_1 = require("../adapters/userController");
const userRepository_1 = require("../infrastructure/respostories/userRepository");
const tempUserRepository_1 = require("../infrastructure/respostories/tempUserRepository");
const userUseCase_1 = require("../useCases/userUseCase");
const driverUseCase_1 = require("../useCases/driverUseCase");
const encrypt_1 = require("./encrypt");
const jwt_1 = require("./jwt");
const generateOtp_1 = require("./generateOtp");
const nodeMailer_1 = require("./nodeMailer");
const vehicleControllers_1 = require("../adapters/vehicleControllers");
const vehicleUseCase_1 = require("../useCases/vehicleUseCase");
const vehicleRepositories_1 = require("../infrastructure/respostories/vehicleRepositories");
const adminUseCase_1 = require("../useCases/adminUseCase");
const adminRepository_1 = require("../infrastructure/respostories/adminRepository");
const adminController_1 = require("../adapters/adminController");
const packageController_1 = require("../adapters/packageController");
const packagesUseCase_1 = require("../useCases/packagesUseCase");
const packageRepository_1 = require("../infrastructure/respostories/packageRepository");
const driverRepository_1 = require("../infrastructure/respostories/driverRepository");
const driverController_1 = require("../adapters/driverController");
const bookingRepository_1 = require("../infrastructure/respostories/bookingRepository");
const bookingUseCase_1 = require("../useCases/bookingUseCase");
const bookingController_1 = require("../adapters/bookingController");
const chatRepository_1 = require("../infrastructure/respostories/chatRepository");
const chatUseCase_1 = require("../useCases/chatUseCase");
const chatController_1 = require("../adapters/chatController");
const packageBookingRepository_1 = require("../infrastructure/respostories/packageBookingRepository");
const packageBooking_1 = require("../useCases/packageBooking");
const packageBookingController_1 = require("../adapters/packageBookingController");
const reviewRespositories_1 = require("../infrastructure/respostories/reviewRespositories");
const reviewUsecase_1 = require("../useCases/reviewUsecase");
const reviewControllers_1 = require("../adapters/reviewControllers");
// Providers used ****
const encrypt = new encrypt_1.encrypting();
const generateOTP = new generateOtp_1.GenerateOtp();
const sendMail = new nodeMailer_1.mailSender();
const jwt = new jwt_1.JWTTOKEN();
// repositories ****
const userRepository = new userRepository_1.UserRepository();
const tempuserRepository = new tempUserRepository_1.tempUserRepository();
const VehicleRepository = new vehicleRepositories_1.vehicleRepository();
const AdminRepository = new adminRepository_1.adminRepository();
const PackageRepository = new packageRepository_1.packageRepository();
const DriverRepository = new driverRepository_1.driverRepository();
const BookingRepository = new bookingRepository_1.bookingRepository();
const ChatRepository = new chatRepository_1.chatRepository();
const packageBookingRepository = new packageBookingRepository_1.PackageBookingRepository();
const reviewRepository = new reviewRespositories_1.ReviewRepository();
// usecases ****
const useruseCase = new userUseCase_1.userUseCase(userRepository, tempuserRepository, jwt, sendMail, encrypt);
const vehicleuseCase = new vehicleUseCase_1.vehicleUseCase(VehicleRepository);
const adminuseCase = new adminUseCase_1.adminUseCase(AdminRepository);
const packageuseCase = new packagesUseCase_1.packageUseCase(PackageRepository);
const driverusecase = new driverUseCase_1.driverUseCase(DriverRepository, sendMail);
const bookingUsecase = new bookingUseCase_1.bookingusecase(BookingRepository);
const chatusecase = new chatUseCase_1.chatUsecase(ChatRepository);
const packageBookingusecase = new packageBooking_1.packageBookingUsecase(packageBookingRepository);
const reviewUsecase = new reviewUsecase_1.ReviewUsecase(reviewRepository);
// controller ****
exports.uController = new userController_1.userController(useruseCase, generateOTP, encrypt, bookingUsecase);
exports.vController = new vehicleControllers_1.vehicleController(vehicleuseCase);
exports.aConntroller = new adminController_1.adminController(adminuseCase, jwt);
exports.pController = new packageController_1.packageController(packageuseCase);
exports.dController = new driverController_1.driverController(driverusecase, jwt);
exports.bController = new bookingController_1.bookingController(bookingUsecase, vehicleuseCase);
exports.cController = new chatController_1.chatController(chatusecase);
exports.pbController = new packageBookingController_1.packageBookingController(packageBookingusecase);
exports.rController = new reviewControllers_1.reviewController(reviewUsecase);
